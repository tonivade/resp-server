plugins {
  id 'java-library'
  id 'jacoco'
  id 'maven-publish'
  id 'signing'
  alias(libs.plugins.nexus)
  alias(libs.plugins.versions)
}

group = 'com.github.tonivade'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(8)
  }

  withJavadocJar()
  withSourcesJar()
}

jacoco {
  toolVersion = "0.8.9"
}

test {
  useJUnitPlatform()

  jacoco {
    destinationFile = file("${buildDir}/jacoco/test.exec")
  }
}

jacocoTestReport {
  reports {
    xml.required = true
    html.required = true
    xml.outputLocation = file("${buildDir}/reports/jacoco/report.xml")
  }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = 'https://oss.sonatype.org/content/repositories/snapshots'
  }
}

dependencies {
  api libs.nettyBuffer
  api libs.nettyCommon
  api libs.nettyCodec
  api libs.nettyHandler
  api libs.nettyResolver
  api libs.nettyTransport
  api libs.nettyTransportClassesEpoll
  api libs.rxjava3
  api libs.slf4j
  runtimeOnly(libs.nettyTransportNativeEpoll) {
    artifact {
      classifier = 'linux-aarch_64'
    }
  }
  runtimeOnly(libs.nettyTransportNativeEpoll) {
    artifact {
      classifier = 'linux-x86_64'
    }
  }
  testImplementation libs.junit
  testImplementation libs.junitJupiterEngine 
  testImplementation libs.mockitoCore
  testImplementation libs.hamcrestLibrary
  testRuntimeOnly libs.logbackClassic
}

publishing {
  publications {
    mavenJava(MavenPublication) {

      from components.java

      pom {
        name = 'RESP Server'
        description = 'Netty implementation of REdis Serialization Protocol, and a simple framework to implement command based protocols'
        url = 'https://github.com/tonivade/resp-server'
        inceptionYear = '2015'

        scm {
          url = 'https://github.com/tonivade/resp-server'
          connection = 'scm:https://github.com/tonivade/resp-server.git'
          developerConnection = 'scm:git://github.com/tonivade/resp-server.git'
        }

        licenses {
          license {
            name = 'The MIT License (MIT)'
            url = 'https://github.com/tonivade/resp-server/blob/master/LICENSE'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'tonivade'
            name = 'Antonio Mu√±oz'
            email = 'antoniogmc@gmail.com'
          }
        }
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
  onlyIf { isReleaseVersion }
}

nexusPublishing {
  repositories {
    sonatype {

      stagingProfileId = '19a96b937cdb5'

      username = project.findProperty('nexusUsername')
      password = project.findProperty('nexusPassword')
    }
  }

  clientTimeout = Duration.ofSeconds(300)
  connectTimeout = Duration.ofSeconds(60)

  transitionCheckOptions {
    maxRetries.set(40)
    delayBetween.set(java.time.Duration.ofMillis(3000))
  }
}
